{"hierarchy":{"paths":[["doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab","doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"kind":"text","text":": "},{"text":"MLModelConfiguration","preciseIdentifier":"c:objc(cs)MLModelConfiguration","kind":"typeIdentifier"},{"kind":"text","text":" = MLModelConfiguration(), "},{"kind":"externalParam","text":"completionHandler"},{"kind":"text","text":" "},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (Swift","kind":"text"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet","text":"SqueezeNet","preciseIdentifier":"s:6ML_Lab10SqueezeNetC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"platforms":["iOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"the desired model configuration"}],"type":"paragraph"}],"name":"configuration"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the completion handler to be called when the model loading completes successfully or unsuccessfully"}]}],"name":"handler"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Model loading may take time when the model content is not immediately available (e.g. encrypted model). Use this factory method especially when the caller is on the main thread.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Construct SqueezeNet instance asynchronously with optional configuration."}],"identifier":{"url":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet\/load(configuration:completionHandler:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ml_lab\/squeezenet\/load(configuration:completionhandler:)"]}],"sections":[],"metadata":{"platforms":[{"beta":false,"name":"iOS","unavailable":false,"deprecated":false,"introducedAt":"14.0"},{"unavailable":false,"introducedAt":"11.0","name":"macOS","beta":false,"deprecated":false},{"deprecated":false,"introducedAt":"14.0","unavailable":false,"beta":false,"name":"tvOS"},{"deprecated":false,"unavailable":false,"name":"watchOS","beta":false,"introducedAt":"7.0"}],"modules":[{"name":"ML_Lab"}],"externalID":"s:6ML_Lab10SqueezeNetC4load13configuration17completionHandlerySo20MLModelConfigurationC_ys6ResultOyACs5Error_pGctFZ","role":"symbol","title":"load(configuration:completionHandler:)","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"configuration"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MLModelConfiguration","preciseIdentifier":"c:objc(cs)MLModelConfiguration"},{"text":", ","kind":"text"},{"text":"completionHandler","kind":"externalParam"},{"text":": (Swift","kind":"text"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6ML_Lab10SqueezeNetC","kind":"typeIdentifier","text":"SqueezeNet"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"roleHeading":"Type Method","symbolKind":"method"},"references":{"doc://com.lambdadigamma.mllab/documentation/ML_Lab/SqueezeNet/load(configuration:completionHandler:)":{"abstract":[{"type":"text","text":"Construct SqueezeNet instance asynchronously with optional configuration."}],"url":"\/documentation\/ml_lab\/squeezenet\/load(configuration:completionhandler:)","role":"symbol","kind":"symbol","title":"load(configuration:completionHandler:)","identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet\/load(configuration:completionHandler:)","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"kind":"text","text":"("},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLModelConfiguration","kind":"typeIdentifier","text":"MLModelConfiguration"},{"text":", ","kind":"text"},{"text":"completionHandler","kind":"externalParam"},{"text":": (Swift","kind":"text"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"text":"SqueezeNet","preciseIdentifier":"s:6ML_Lab10SqueezeNetC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"doc://com.lambdadigamma.mllab/documentation/ML_Lab":{"role":"collection","identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab","abstract":[],"type":"topic","title":"ML_Lab","url":"\/documentation\/ml_lab","kind":"symbol"},"doc://com.lambdadigamma.mllab/documentation/ML_Lab/SqueezeNet":{"title":"SqueezeNet","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"SqueezeNet","kind":"identifier"}],"role":"symbol","url":"\/documentation\/ml_lab\/squeezenet","type":"topic","kind":"symbol","identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet","navigatorTitle":[{"text":"SqueezeNet","kind":"identifier"}],"abstract":[{"type":"text","text":"Class for model loading and prediction"}]}}}