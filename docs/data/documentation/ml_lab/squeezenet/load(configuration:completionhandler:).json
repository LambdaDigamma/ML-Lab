{"abstract":[{"type":"text","text":"Construct SqueezeNet instance asynchronously with optional configuration."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)MLModelConfiguration","text":"MLModelConfiguration","kind":"typeIdentifier"},{"text":" = MLModelConfiguration(), ","kind":"text"},{"kind":"externalParam","text":"completionHandler"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (Swift","kind":"text"},{"kind":"text","text":"."},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"SqueezeNet","identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet","preciseIdentifier":"s:6ML_Lab10SqueezeNetC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"configuration","content":[{"inlineContent":[{"type":"text","text":"the desired model configuration"}],"type":"paragraph"}]},{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"the completion handler to be called when the model loading completes successfully or unsuccessfully"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Model loading may take time when the model content is not immediately available (e.g. encrypted model). Use this factory method especially when the caller is on the main thread.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet\/load(configuration:completionHandler:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab","doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet"]]},"metadata":{"platforms":[{"introducedAt":"14.0","unavailable":false,"beta":false,"deprecated":false,"name":"iOS"},{"deprecated":false,"introducedAt":"11.0","beta":false,"name":"macOS","unavailable":false},{"unavailable":false,"deprecated":false,"name":"tvOS","beta":false,"introducedAt":"14.0"},{"introducedAt":"7.0","beta":false,"unavailable":false,"name":"watchOS","deprecated":false}],"title":"load(configuration:completionHandler:)","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLModelConfiguration","text":"MLModelConfiguration"},{"kind":"text","text":", "},{"text":"completionHandler","kind":"externalParam"},{"text":": (Swift","kind":"text"},{"text":".","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6ML_Lab10SqueezeNetC","text":"SqueezeNet","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"modules":[{"name":"ML_Lab"}],"role":"symbol","symbolKind":"method","roleHeading":"Type Method","externalID":"s:6ML_Lab10SqueezeNetC4load13configuration17completionHandlerySo20MLModelConfigurationC_ys6ResultOyACs5Error_pGctFZ"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ml_lab\/squeezenet\/load(configuration:completionhandler:)"]}],"references":{"doc://com.lambdadigamma.mllab/documentation/ML_Lab":{"type":"topic","title":"ML_Lab","identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab","abstract":[],"url":"\/documentation\/ml_lab","role":"collection","kind":"symbol"},"doc://com.lambdadigamma.mllab/documentation/ML_Lab/SqueezeNet/load(configuration:completionHandler:)":{"title":"load(configuration:completionHandler:)","abstract":[{"type":"text","text":"Construct SqueezeNet instance asynchronously with optional configuration."}],"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)MLModelConfiguration","text":"MLModelConfiguration"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completionHandler"},{"text":": (Swift","kind":"text"},{"text":".","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6ML_Lab10SqueezeNetC","text":"SqueezeNet","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet\/load(configuration:completionHandler:)","url":"\/documentation\/ml_lab\/squeezenet\/load(configuration:completionhandler:)","role":"symbol"},"doc://com.lambdadigamma.mllab/documentation/ML_Lab/SqueezeNet":{"title":"SqueezeNet","abstract":[{"type":"text","text":"Class for model loading and prediction"}],"identifier":"doc:\/\/com.lambdadigamma.mllab\/documentation\/ML_Lab\/SqueezeNet","kind":"symbol","url":"\/documentation\/ml_lab\/squeezenet","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SqueezeNet"}],"navigatorTitle":[{"text":"SqueezeNet","kind":"identifier"}],"role":"symbol","type":"topic"}}}